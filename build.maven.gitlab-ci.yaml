variables:
  DEFAULT_MAVEN_CLI_OPTS: "--show-version -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  MAVEN_JDK_VERSION: "3.6.3-jdk-11"
  DOCKER_VERSION: "stable"
  DOCKER_DIND_VERSION: "18.09-dind"
  DOCKER_BUILD_ARGS_ENTRIPOINT: "--build-arg JAR_FILE=$JAR_FILE"
  DOCKERFILE_LOCATION: "-f Dockerfile"

cache:
  paths:
  - .m2/repository

.build-jar:
  image: ${PRIVATE_REGISTRY_PULL_SERVER}/maven:${MAVEN_JDK_VERSION}
  before_script:
    - mvn -s $M2_SETTINGS_XML $DEFAULT_MAVEN_CLI_OPTS versions:set -DnewVersion=$CI_COMMIT_TAG
    - MVN_BUILD_FILE_NAME=$(mvn -s $M2_SETTINGS_XML $DEFAULT_MAVEN_CLI_OPTS -N -q -DforceStdout help:evaluate -Dexpression="project.build.finalName").jar && echo ${MVN_BUILD_FILE_NAME}
    - MVN_PROJECT_NAME=$(mvn -s $M2_SETTINGS_XML $DEFAULT_MAVEN_CLI_OPTS -N -q -DforceStdout help:evaluate -Dexpression="project.artifactId") && echo ${MVN_PROJECT_NAME}
    - MVN_PROJECT_GROUP_ID=$(mvn -s $M2_SETTINGS_XML $DEFAULT_MAVEN_CLI_OPTS -N -q -DforceStdout help:evaluate -Dexpression="project.projectId") && echo ${MVN_PROJECT_GROUP_ID}
    - echo "JAR_FILE=$MVN_BUILD_FILE_NAME" >> deploy.env 
    - echo "PROJECT_NAME=${MVN_PROJECT_NAME}" >> deploy.env
    - echo "PROJECT_GROUP_ID=${MVN_PROJECT_GROUP_ID}" >> deploy.env
  script:
    - mvn -s $M2_SETTINGS_XML $DEFAULT_MAVEN_CLI_OPTS package -DskipTests
  artifacts:
    reports:
      dotenv: deploy.env
    paths:
      - target/*.jar
    name: $CI_PROJECT_NAME-$CI_COMMIT_TAG

.build-docker:
  stage: build
  image: ${PRIVATE_REGISTRY_PULL_SERVER}/docker:${DOCKER_VERSION}
  services:
    - name: ${PRIVATE_REGISTRY_PULL_SERVER}/docker:${DOCKER_DIND_VERSION}
      entrypoint: ["dockerd-entrypoint.sh"]
      command: [
        "--insecure-registry=192.168.100.250:8087",
        "--insecure-registry=192.168.100.250:8088"
      ]
      alias: dockerd
  variables:
      DOCKER_HOST: tcp://dockerd:2375
      DOCKER_DRIVER: overlay2
      DOCKER_TLS_CERTDIR: ""
  before_script:
    - mkdir -p ~/.docker/ && cat $DOCKER_CONF_JSON > ~/.docker/config.json
  script:
    - docker build -q $DOCKERFILE_LOCATION $DOCKER_BUILD_ARGS_ENTRIPOINT -t $PRIVATE_REGISTRY_PUSH_SERVER/$PROJECT_GROUP_ID/$PROJECT_NAME:$CI_COMMIT_TAG -t $PRIVATE_REGISTRY_PUSH_SERVER/$PROJECT_GROUP_ID/$PROJECT_NAME:$CI_COMMIT_SHORT_SHA -t $PRIVATE_REGISTRY_PUSH_SERVER/$PROJECT_GROUP_ID/$PROJECT_NAME:latest .
    - docker image push $PRIVATE_REGISTRY_PUSH_SERVER/$PROJECT_GROUP_ID/$PROJECT_NAME:$CI_COMMIT_TAG
    - docker image push $PRIVATE_REGISTRY_PUSH_SERVER/$PROJECT_GROUP_ID/$PROJECT_NAME:$CI_COMMIT_SHORT_SHA
    - docker image push $PRIVATE_REGISTRY_PUSH_SERVER/$PROJECT_GROUP_ID/$PROJECT_NAME:latest
  after_script:
    - echo "PROJECT_NAME=$PROJECT_NAME" >> deploy.env
    - echo "PROJECT_GROUP_ID=$PROJECT_GROUP_ID" >> deploy.env
    - echo "CI_COMMIT_TAG=${CI_COMMIT_TAG}" >> deploy.env
    - echo "CI_COMMIT_SHORT_SHA=${CI_COMMIT_SHORT_SHA}" >> deploy.env
  artifacts:
    reports:
      dotenv: deploy.env
